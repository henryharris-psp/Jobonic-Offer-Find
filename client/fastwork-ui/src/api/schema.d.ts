/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/user": {
    /** Updates and returns a user */
    put: operations["update"];
    /** Saves and returns a user */
    post: operations["save"];
    /** Removes a user */
    delete: operations["removeUser"];
  };
  "/api/v1/job": {
    /** Get single job */
    get: operations["getJob"];
    /** Updates and returns a job */
    put: operations["update_1"];
    /** Saves and returns a job */
    post: operations["create"];
    /** Removes a job */
    delete: operations["delete"];
  };
  "/api/v1/job/changeStatus": {
    /** Change job status */
    put: operations["changeJobStatus"];
  };
  "/api/v1/freelancer": {
    /** Get single freelancer */
    get: operations["getFreelancer"];
    /** Updates and returns a freelancer */
    put: operations["update_2"];
    /** Saves and returns a freelancer */
    post: operations["create_1"];
    /** Removes a freelancer */
    delete: operations["delete_1"];
  };
  "/api/v1/client": {
    /** Get single client */
    get: operations["getClient"];
    /** Updates and returns a client */
    put: operations["update_3"];
    /** Saves and returns a client */
    post: operations["create_2"];
    /** Removes a client */
    delete: operations["delete_2"];
  };
  "/api/v1/category": {
    /** Get single category */
    get: operations["getCategory"];
    /** Updates and returns a category */
    put: operations["update_4"];
    /** Saves and returns a category */
    post: operations["create_3"];
    /** Removes a category */
    delete: operations["delete_3"];
  };
  "/api/v1/user/all": {
    /** Get all users */
    get: operations["getAllUsers"];
    /** Get all users with sorting and pagination. Filters user by username and email */
    post: operations["getUsers"];
  };
  "/api/v1/job/all": {
    /** Get all job with pagination and sorting. Filters job by title, location and description */
    post: operations["getAllJobs"];
  };
  "/api/v1/freelancer/all": {
    /** Get all freelancers with pagination and sorting. Filters freelancer by firstName, lastName, company and skills */
    post: operations["getAllFreelancers"];
  };
  "/api/v1/client/all": {
    /** Get all clients with pagination and sorting. Filters client by firstName, lastName and company */
    post: operations["getAllClients"];
  };
  "/api/v1/category/all": {
    /** Get all categories */
    get: operations["getAllCategories"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserDTO: {
      /** Format: uuid */
      id?: string;
      username?: string;
      email?: string;
    };
    JobDTO: {
      /** Format: uuid */
      id?: string;
      title?: string;
      description?: string;
      /** @enum {string} */
      jobStatus?: "ACTIVE" | "IN_PROGRESS" | "VERIFIED" | "CLOSED";
      /** Format: uuid */
      clientId?: string;
      /** Format: uuid */
      freelancerId?: string;
      /** Format: double */
      budget?: number;
      location?: string;
      skills?: string;
      /** Format: double */
      hourOfCompletion?: number;
    };
    FreelancerDTO: {
      /** Format: uuid */
      id?: string;
      firstName?: string;
      lastName?: string;
      /** Format: double */
      rating?: number;
      /** Format: double */
      noOfJobs?: number;
      company?: string;
      skills?: string;
      /** Format: double */
      hourlyRate?: number;
      degree?: string;
      /** Format: double */
      experience?: number;
      designation?: string;
      accountNumber?: string;
      bankName?: string;
      verified?: boolean;
    };
    ClientDTO: {
      /** Format: uuid */
      id?: string;
      firstName?: string;
      lastName?: string;
      /** Format: double */
      rating?: number;
      accountNumber?: string;
      bankName?: string;
      company?: string;
      verified?: boolean;
    };
    CategoryDTO: {
      /** Format: uuid */
      id?: string;
      name?: string;
    };
    PageAndFilterDTOSearchAndFilterDTO: {
      /**
       * Format: int32
       * @example 1
       */
      pageNumber?: number;
      /**
       * Format: int32
       * @example 100
       */
      pageSize?: number;
      /** @example columnToSort */
      sortBy?: string;
      /**
       * @example DESC
       * @enum {string}
       */
      sortOrder?: "ASC" | "DESC";
      filter?: components["schemas"]["SearchAndFilterDTO"];
    };
    SearchAndFilterDTO: {
      searchKeyword?: string;
    };
    PaginationDTOUserDTO: {
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int64 */
      totalElements?: number;
      content?: components["schemas"]["UserDTO"][];
      last?: boolean;
    };
    PaginationDTOJobDTO: {
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int64 */
      totalElements?: number;
      content?: components["schemas"]["JobDTO"][];
      last?: boolean;
    };
    PaginationDTOFreelancerDTO: {
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int64 */
      totalElements?: number;
      content?: components["schemas"]["FreelancerDTO"][];
      last?: boolean;
    };
    PaginationDTOClientDTO: {
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int64 */
      totalElements?: number;
      content?: components["schemas"]["ClientDTO"][];
      last?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Updates and returns a user */
  update: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDTO"];
        };
      };
    };
  };
  /** Saves and returns a user */
  save: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDTO"];
        };
      };
    };
  };
  /** Removes a user */
  removeUser: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** Get single job */
  getJob: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["JobDTO"];
        };
      };
    };
  };
  /** Updates and returns a job */
  update_1: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["JobDTO"];
        };
      };
    };
  };
  /** Saves and returns a job */
  create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["JobDTO"];
        };
      };
    };
  };
  /** Removes a job */
  delete: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** Change job status */
  changeJobStatus: {
    parameters: {
      query: {
        id: string;
        jobStatus: "ACTIVE" | "IN_PROGRESS" | "VERIFIED" | "CLOSED";
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["JobDTO"];
        };
      };
    };
  };
  /** Get single freelancer */
  getFreelancer: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["FreelancerDTO"];
        };
      };
    };
  };
  /** Updates and returns a freelancer */
  update_2: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FreelancerDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["FreelancerDTO"];
        };
      };
    };
  };
  /** Saves and returns a freelancer */
  create_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FreelancerDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["FreelancerDTO"];
        };
      };
    };
  };
  /** Removes a freelancer */
  delete_1: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** Get single client */
  getClient: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClientDTO"];
        };
      };
    };
  };
  /** Updates and returns a client */
  update_3: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClientDTO"];
        };
      };
    };
  };
  /** Saves and returns a client */
  create_2: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ClientDTO"];
        };
      };
    };
  };
  /** Removes a client */
  delete_2: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** Get single category */
  getCategory: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CategoryDTO"];
        };
      };
    };
  };
  /** Updates and returns a category */
  update_4: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CategoryDTO"];
        };
      };
    };
  };
  /** Saves and returns a category */
  create_3: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CategoryDTO"];
        };
      };
    };
  };
  /** Removes a category */
  delete_3: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
    };
  };
  /** Get all users */
  getAllUsers: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDTO"][];
        };
      };
    };
  };
  /** Get all users with sorting and pagination. Filters user by username and email */
  getUsers: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PageAndFilterDTOSearchAndFilterDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaginationDTOUserDTO"];
        };
      };
    };
  };
  /** Get all job with pagination and sorting. Filters job by title, location and description */
  getAllJobs: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PageAndFilterDTOSearchAndFilterDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaginationDTOJobDTO"];
        };
      };
    };
  };
  /** Get all freelancers with pagination and sorting. Filters freelancer by firstName, lastName, company and skills */
  getAllFreelancers: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PageAndFilterDTOSearchAndFilterDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaginationDTOFreelancerDTO"];
        };
      };
    };
  };
  /** Get all clients with pagination and sorting. Filters client by firstName, lastName and company */
  getAllClients: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PageAndFilterDTOSearchAndFilterDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PaginationDTOClientDTO"];
        };
      };
    };
  };
  /** Get all categories */
  getAllCategories: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CategoryDTO"][];
        };
      };
    };
  };
}
